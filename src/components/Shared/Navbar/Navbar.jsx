import React, { useState } from "react";
import {
  Typography,
  Button,
  Menu,
  MenuHandler,
  MenuList,
  MenuItem,
  Avatar,
  IconButton,
  ListItem,
  ListItemPrefix,
} from "@material-tailwind/react";
import { ChevronDownIcon, Bars2Icon } from "@heroicons/react/24/outline";
import { FaSistrix } from "react-icons/fa6";
import { Link } from "react-router-dom";
// profile menu component
function ProfileMenu() {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
 
  const closeMenu = () => setIsMenuOpen(false);
  // const [open, setOpen] = React.useState(0);
  const [menuOpen, SetMenuOpen] = useState("");

  return (
    <Menu open={isMenuOpen} handler={setIsMenuOpen} placement="bottom-end">
      <div className="flex items-center gap-4 lg:ml-auto">
        <div className="flex items-center gap-4">
          <div>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="18"
              height="23"
              viewBox="0 0 18 23"
              fill="none"
            >
              <path
                d="M6.18336 20L6.48336 20.4C7.83336 22.2 10.5334 22.2 11.8834 20.4L12.1834 20M1.36619 14.5496L1.46954 14.7627C2.13331 16.1311 3.52054 17 5.04144 17H13.2623C14.5656 17 15.7785 16.3342 16.4783 15.2347C17.4661 13.6826 17.2045 11.6465 15.8564 10.3945L15.8125 10.3538C14.8972 9.50376 14.4466 8.26543 14.6015 7.02598L14.6662 6.50905C15.0318 3.58379 12.7509 1 9.80286 1H8.09995C5.15552 1 2.87737 3.58064 3.24258 6.50234L3.32194 7.13719C3.46808 8.30631 3.04102 9.4741 2.17514 10.2731C0.99242 11.3645 0.663827 13.1016 1.36619 14.5496Z"
                stroke="#556476"
                stroke-width="1.5"
                stroke-linecap="round"
              />
              <circle
                cx="15"
                cy="5"
                r="4.25"
                fill="#EC4A4A"
                stroke="white"
                stroke-width="1.5"
              />
            </svg>
          </div>
          <div className="">|</div>
        </div>
        <MenuHandler>
          <Button
            variant="text"
            color="blue-gray"
            className="flex items-center gap-2 rounded-full  lg:ml-auto bg-[#F4F7FF] p-2"
          >
            <Avatar
              variant="circular"
              size="sm"
              alt="tania andrew"
              src="https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1480&q=80"
            />
            <Typography>
              <span className="text-[14px] font-medium text-[#172635] capitalize lg:block hidden text-left">
                Dhruv Chunawala
              </span>
              <span className="text-[12px] font-normal capitalize lg:block hidden" style={{ textTransform: 'lowercase' }}>
                dhruv.chunawala@gmail.com
              </span>
            </Typography>
            <ChevronDownIcon
              strokeWidth={2.5}
              className={`h-3 w-3 transition-transform z-50 ${
                isMenuOpen ? "rotate-180" : ""
              }`}
            />
          </Button>
        </MenuHandler>
      </div>
      <MenuList className=" w-[230px] p-4">
        <MenuItem className="" onClick={closeMenu}>
          <Link to="#">
            <ListItem
              className={`${
                menuOpen == "administration"
                  ? "text-[#4A58EC]  bg-[#F4F7FF] "
                  : ""
              }`}
              onClick={() => SetMenuOpen("administration")}
            >
              <ListItemPrefix>
                <svg
                  className={`h-4 w-4 ${
                    menuOpen === "administration"
                      ? "text-[#4A58EC]"
                      : "text-[#556476]"
                  }`}
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 18 18"
                  fill="none"
                >
                  <path
                    d="M9.83333 10.9582C10.1785 10.9582 10.4583 10.6783 10.4583 10.3332C10.4583 9.98799 10.1785 9.70817 9.83333 9.70817V10.9582ZM9.83333 17.6248C10.1785 17.6248 10.4583 17.345 10.4583 16.9998C10.4583 16.6547 10.1785 16.3748 9.83333 16.3748V17.6248ZM17.799 10.7501C18.0292 10.4929 18.0074 10.0978 17.7502 9.86752C17.4931 9.63728 17.0979 9.65911 16.8677 9.91628L17.799 10.7501ZM14.5257 13.4692L14.06 13.0523L14.06 13.0523L14.5257 13.4692ZM9.72431 13.4692L10.19 13.0523L10.19 13.0523L9.72431 13.4692ZM9.46565 12.2432C9.2354 11.9861 8.84028 11.9643 8.58311 12.1945C8.32594 12.4247 8.30411 12.8199 8.53435 13.077L9.46565 12.2432ZM10.0417 4.49984C10.0417 5.99561 8.8291 7.20817 7.33333 7.20817V8.45817C9.51946 8.45817 11.2917 6.68596 11.2917 4.49984H10.0417ZM7.33333 7.20817C5.83756 7.20817 4.625 5.99561 4.625 4.49984H3.375C3.375 6.68596 5.14721 8.45817 7.33333 8.45817V7.20817ZM4.625 4.49984C4.625 3.00407 5.83756 1.7915 7.33333 1.7915V0.541504C5.14721 0.541504 3.375 2.31371 3.375 4.49984H4.625ZM7.33333 1.7915C8.8291 1.7915 10.0417 3.00407 10.0417 4.49984H11.2917C11.2917 2.31371 9.51946 0.541504 7.33333 0.541504V1.7915ZM4.83333 10.9582H9.83333V9.70817H4.83333V10.9582ZM9.83333 16.3748H4.83333V17.6248H9.83333V16.3748ZM4.83333 16.3748C3.33756 16.3748 2.125 15.1623 2.125 13.6665H0.875C0.875 15.8526 2.64721 17.6248 4.83333 17.6248V16.3748ZM4.83333 9.70817C2.64721 9.70817 0.875 11.4804 0.875 13.6665H2.125C2.125 12.1707 3.33756 10.9582 4.83333 10.9582V9.70817ZM16.8677 9.91628L14.06 13.0523L14.9913 13.886L17.799 10.7501L16.8677 9.91628ZM10.19 13.0523L9.46565 12.2432L8.53435 13.077L9.25866 13.886L10.19 13.0523ZM14.06 13.0523C13.4911 13.6877 13.108 14.1134 12.7804 14.3887C12.4684 14.651 12.2851 14.7082 12.125 14.7082V15.9582C12.6967 15.9582 13.1575 15.7047 13.5847 15.3456C13.9964 14.9996 14.4477 14.4933 14.9913 13.886L14.06 13.0523ZM9.25866 13.886C9.80232 14.4933 10.2536 14.9996 10.6653 15.3456C11.0925 15.7047 11.5533 15.9582 12.125 15.9582V14.7082C11.9649 14.7082 11.7816 14.651 11.4696 14.3887C11.142 14.1134 10.7589 13.6877 10.19 13.0523L9.25866 13.886Z"
                    fill="currentColor"
                  />
                </svg>
              </ListItemPrefix>
              <span
                className={`${
                  menuOpen == "administration" ? "text-[#4A58EC]" : ""
                }`}
              >
                Administration
              </span>
            </ListItem>
          </Link>
          <Link to="#">
            <ListItem
              className={`${
                menuOpen == "preferences" ? "text-[#4A58EC] bg-[#F4F7FF] " : ""
              }`}
              onClick={() => SetMenuOpen("preferences")}
            >
              <ListItemPrefix>
                <svg
                  className={`h-4 w-4 ${
                    menuOpen === "preferences"
                      ? "text-[#4A58EC]"
                      : "text-[#556476]"
                  }`}
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 16 17"
                  fill="none"
                >
                  <path
                    d="M7.9987 2.04167C7.65352 2.04167 7.3737 2.32149 7.3737 2.66667C7.3737 3.01184 7.65352 3.29167 7.9987 3.29167L7.9987 2.04167ZM14.6654 3.29167C15.0105 3.29167 15.2904 3.01185 15.2904 2.66667C15.2904 2.32149 15.0105 2.04167 14.6654 2.04167L14.6654 3.29167ZM7.9987 13.7083C7.65352 13.7083 7.3737 13.9882 7.3737 14.3333C7.3737 14.6785 7.65352 14.9583 7.9987 14.9583V13.7083ZM14.6654 14.9583C15.0105 14.9583 15.2904 14.6785 15.2904 14.3333C15.2904 13.9882 15.0105 13.7083 14.6654 13.7083V14.9583ZM7.9987 9.125C8.34388 9.125 8.6237 8.84518 8.6237 8.5C8.6237 8.15482 8.34388 7.875 7.9987 7.875L7.9987 9.125ZM1.33203 7.875C0.986853 7.875 0.707031 8.15482 0.707031 8.5C0.707031 8.84518 0.986853 9.125 1.33203 9.125L1.33203 7.875ZM7.9987 3.29167L14.6654 3.29167L14.6654 2.04167L7.9987 2.04167L7.9987 3.29167ZM7.9987 14.9583H14.6654V13.7083H7.9987V14.9583ZM7.9987 7.875L1.33203 7.875L1.33203 9.125L7.9987 9.125L7.9987 7.875ZM0.707031 2.66667C0.707031 3.93232 1.73305 4.95833 2.9987 4.95833V3.70833C2.4234 3.70833 1.95703 3.24196 1.95703 2.66667H0.707031ZM2.9987 4.95833C4.26435 4.95833 5.29036 3.93232 5.29036 2.66667H4.04036C4.04036 3.24196 3.57399 3.70833 2.9987 3.70833V4.95833ZM5.29036 2.66667C5.29036 1.40101 4.26435 0.375 2.9987 0.375V1.625C3.57399 1.625 4.04036 2.09137 4.04036 2.66667H5.29036ZM2.9987 0.375C1.73305 0.375 0.707031 1.40101 0.707031 2.66667H1.95703C1.95703 2.09137 2.4234 1.625 2.9987 1.625V0.375ZM0.707031 14.3333C0.707031 15.599 1.73305 16.625 2.9987 16.625V15.375C2.4234 15.375 1.95703 14.9086 1.95703 14.3333H0.707031ZM2.9987 16.625C4.26435 16.625 5.29036 15.599 5.29036 14.3333H4.04036C4.04036 14.9086 3.57399 15.375 2.9987 15.375V16.625ZM5.29036 14.3333C5.29036 13.0677 4.26435 12.0417 2.9987 12.0417V13.2917C3.57399 13.2917 4.04036 13.758 4.04036 14.3333H5.29036ZM2.9987 12.0417C1.73305 12.0417 0.707031 13.0677 0.707031 14.3333H1.95703C1.95703 13.758 2.4234 13.2917 2.9987 13.2917V12.0417ZM15.2904 8.5C15.2904 7.23435 14.2644 6.20833 12.9987 6.20833L12.9987 7.45833C13.574 7.45833 14.0404 7.9247 14.0404 8.5L15.2904 8.5ZM12.9987 6.20833C11.733 6.20833 10.707 7.23435 10.707 8.5L11.957 8.5C11.957 7.9247 12.4234 7.45833 12.9987 7.45833L12.9987 6.20833ZM10.707 8.5C10.707 9.76565 11.733 10.7917 12.9987 10.7917L12.9987 9.54167C12.4234 9.54167 11.957 9.0753 11.957 8.5L10.707 8.5ZM12.9987 10.7917C14.2644 10.7917 15.2904 9.76565 15.2904 8.5L14.0404 8.5C14.0404 9.0753 13.574 9.54167 12.9987 9.54167L12.9987 10.7917Z"
                    fill="currentColor"
                  />
                </svg>
              </ListItemPrefix>
              <span
                className={`${
                  menuOpen == "preferences" ? "text-[#4A58EC]" : ""
                }`}
              >
                Preferences
              </span>
            </ListItem>
          </Link>
          <Link to="#">
            <ListItem
              className={`${
                menuOpen == "lastView" ? "text-[#4A58EC] bg-[#F4F7FF] " : ""
              }`}
              onClick={() => SetMenuOpen("lastView")}
            >
              <ListItemPrefix>
                <svg
                  className={`h-4 w-4 ${
                    menuOpen === "lastView"
                      ? "text-[#4A58EC]"
                      : "text-[#556476]"
                  }`}
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 18 20"
                  fill="none"
                >
                  <path
                    d="M9.6263 7.16699C9.6263 6.82181 9.34648 6.54199 9.0013 6.54199C8.65612 6.54199 8.3763 6.82181 8.3763 7.16699L9.6263 7.16699ZM6.5013 10.7087C6.15612 10.7087 5.8763 10.9885 5.8763 11.3337C5.8763 11.6788 6.15612 11.9587 6.5013 11.9587V10.7087ZM1.11087 2.72062C0.841329 2.93625 0.797628 3.32955 1.01326 3.59909C1.22889 3.86863 1.6222 3.91233 1.89174 3.6967L1.11087 2.72062ZM3.97507 2.03004C4.24461 1.8144 4.28831 1.4211 4.07268 1.15156C3.85705 0.882019 3.46374 0.838318 3.1942 1.05395L3.97507 2.03004ZM16.1109 3.6967C16.3804 3.91233 16.7737 3.86863 16.9893 3.59909C17.205 3.32955 17.1613 2.93625 16.8917 2.72062L16.1109 3.6967ZM14.8084 1.05395C14.5389 0.838318 14.1456 0.882019 13.9299 1.15156C13.7143 1.4211 13.758 1.8144 14.0275 2.03004L14.8084 1.05395ZM9.0013 10.0837L9.6263 10.0837L9.0013 10.0837ZM8.3763 7.16699L8.3763 10.0837L9.6263 10.0837L9.6263 7.16699L8.3763 7.16699ZM16.7096 10.5003C16.7096 14.7575 13.2585 18.2087 9.0013 18.2087V19.4587C13.9489 19.4587 17.9596 15.4479 17.9596 10.5003H16.7096ZM9.0013 18.2087C4.74411 18.2087 1.29297 14.7575 1.29297 10.5003H0.0429688C0.0429688 15.4479 4.05375 19.4587 9.0013 19.4587V18.2087ZM1.29297 10.5003C1.29297 6.24313 4.74411 2.79199 9.0013 2.79199V1.54199C4.05375 1.54199 0.0429688 5.55277 0.0429688 10.5003H1.29297ZM9.0013 2.79199C13.2585 2.79199 16.7096 6.24313 16.7096 10.5003H17.9596C17.9596 5.55277 13.9489 1.54199 9.0013 1.54199V2.79199ZM1.89174 3.6967L3.97507 2.03004L3.1942 1.05395L1.11087 2.72062L1.89174 3.6967ZM16.8917 2.72062L14.8084 1.05395L14.0275 2.03004L16.1109 3.6967L16.8917 2.72062ZM6.5013 11.9587H7.7513V10.7087H6.5013V11.9587ZM8.3763 10.0837C8.3763 10.4288 8.09648 10.7087 7.7513 10.7087V11.9587C8.78684 11.9587 9.6263 11.1192 9.6263 10.0837L8.3763 10.0837Z"
                    fill="currentColor"
                  />
                </svg>
              </ListItemPrefix>
              <span
                className={`${menuOpen == "lastView" ? "text-[#4A58EC]" : ""}`}
              >
                Last Viewed
              </span>
            </ListItem>
          </Link>
          <Link to="#">
            <ListItem
              className={`${
                menuOpen == "about" ? "text-[#4A58EC] bg-[#F4F7FF] " : ""
              }`}
              onClick={() => SetMenuOpen("about")}
            >
              <ListItemPrefix>
                <svg
                  className={`h-4 w-4 ${
                    menuOpen === "about" ? "text-[#4A58EC]" : "text-[#556476]"
                  }`}
                  xmlns="http://www.w3.org/2000/svg"
                  width="18"
                  height="19"
                  viewBox="0 0 18 19"
                  fill="none"
                >
                  <path
                    d="M9.0013 8.66699V13.667M17.3346 9.50033C17.3346 14.1027 13.6037 17.8337 9.0013 17.8337C4.39893 17.8337 0.667969 14.1027 0.667969 9.50033C0.667969 4.89795 4.39893 1.16699 9.0013 1.16699C13.6037 1.16699 17.3346 4.89795 17.3346 9.50033Z"
                    stroke="currentColor"
                    stroke-width="1.25"
                    stroke-linecap="round"
                  />
                  <path
                    d="M9.83464 6.16683C9.83464 6.62707 9.46154 7.00016 9.0013 7.00016C8.54106 7.00016 8.16797 6.62707 8.16797 6.16683C8.16797 5.70659 8.54106 5.3335 9.0013 5.3335C9.46154 5.3335 9.83464 5.70659 9.83464 6.16683Z"
                    fill="currentColor"
                  />
                </svg>
              </ListItemPrefix>
              <span
                className={`${menuOpen == "about" ? "text-[#4A58EC]" : ""}`}
              >
                About
              </span>
            </ListItem>
          </Link>
          <Link to="#">
            <ListItem
              className={`${
                menuOpen == "logout" ? "text-[#4A58EC] bg-[#F4F7FF]" : ""
              }`}
              onClick={() => SetMenuOpen("logout")}
            >
              <ListItemPrefix>
                <svg
                  className={`h-4 w-4 ${
                    menuOpen === "logout" ? "text-[#4A58EC]" : "text-[#556476]"
                  }`}
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 18 17"
                  fill="none"
                >
                  <path
                    d="M1.5513 4.51486L0.933995 4.41708L0.933995 4.41708L1.5513 4.51486ZM5.01486 1.0513L5.11263 1.6686L5.11263 1.6686L5.01486 1.0513ZM5.01486 15.9487L4.91709 16.566L4.91709 16.566L5.01486 15.9487ZM1.5513 12.4851L0.933994 12.5829L0.933994 12.5829L1.5513 12.4851ZM10.2087 15.6667C10.4847 15.4594 10.5404 15.0676 10.3331 14.7916C10.1258 14.5156 9.73397 14.4599 9.45797 14.6672L10.2087 15.6667ZM9.45797 2.33276C9.73397 2.54006 10.1258 2.48438 10.3331 2.20839C10.5404 1.9324 10.4847 1.54061 10.2087 1.3333L9.45797 2.33276ZM4.83333 7.875C4.48816 7.875 4.20833 8.15482 4.20833 8.5C4.20833 8.84518 4.48816 9.125 4.83333 9.125L4.83333 7.875ZM13.555 4.67693C13.2845 4.46247 12.8914 4.50789 12.6769 4.77836C12.4625 5.04883 12.5079 5.44195 12.7784 5.6564L13.555 4.67693ZM14.6358 6.33154L15.0241 5.8418L15.0241 5.8418L14.6358 6.33154ZM14.6358 10.6685L15.0241 11.1582L14.6358 10.6685ZM12.7784 11.3436C12.5079 11.5581 12.4625 11.9512 12.6769 12.2216C12.8914 12.4921 13.2845 12.5375 13.555 12.3231L12.7784 11.3436ZM16.4834 8.29111L17.1006 8.19277L17.1006 8.19277L16.4834 8.29111ZM16.4834 8.70889L17.1006 8.80723L17.1006 8.80723L16.4834 8.70889ZM7.33333 15.375L6.5 15.375L6.5 16.625L7.33333 16.625L7.33333 15.375ZM2.125 11L2.125 6L0.875002 6L0.875002 11L2.125 11ZM6.5 1.625L7.33334 1.625L7.33334 0.375L6.5 0.375L6.5 1.625ZM2.125 6C2.125 5.20194 2.12694 4.87568 2.16861 4.61263L0.933995 4.41708C0.873062 4.8018 0.875002 5.24971 0.875002 6L2.125 6ZM6.5 0.375C5.74971 0.375 5.3018 0.37306 4.91709 0.433993L5.11263 1.6686C5.37569 1.62694 5.70195 1.625 6.5 1.625L6.5 0.375ZM2.16861 4.61263C2.40863 3.09717 3.59718 1.90863 5.11263 1.6686L4.91709 0.433993C2.86677 0.758731 1.25873 2.36677 0.933995 4.41708L2.16861 4.61263ZM6.5 15.375C5.70195 15.375 5.37569 15.3731 5.11263 15.3314L4.91709 16.566C5.3018 16.6269 5.74971 16.625 6.5 16.625L6.5 15.375ZM0.875002 11C0.875001 11.7503 0.873062 12.1982 0.933994 12.5829L2.1686 12.3874C2.12694 12.1243 2.125 11.7981 2.125 11L0.875002 11ZM5.11263 15.3314C3.59718 15.0914 2.40863 13.9028 2.1686 12.3874L0.933994 12.5829C1.25873 14.6332 2.86677 16.2413 4.91709 16.566L5.11263 15.3314ZM7.33333 16.625C8.41132 16.625 9.4078 16.2683 10.2087 15.6667L9.45797 14.6672C8.86611 15.1118 8.13136 15.375 7.33333 15.375L7.33333 16.625ZM7.33334 1.625C8.13136 1.625 8.86611 1.88819 9.45797 2.33276L10.2087 1.3333C9.4078 0.73172 8.41132 0.375 7.33334 0.375L7.33334 1.625ZM4.83333 9.125L15.6667 9.125L15.6667 7.875L4.83333 7.875L4.83333 9.125ZM12.7784 5.6564L14.2475 6.82128L15.0241 5.8418L13.555 4.67693L12.7784 5.6564ZM14.2475 10.1787L12.7784 11.3436L13.555 12.3231L15.0241 11.1582L14.2475 10.1787ZM14.2475 6.82128C14.8453 7.29524 15.251 7.61814 15.5241 7.89018C15.7944 8.15944 15.8521 8.30097 15.8662 8.38945L17.1006 8.19277C17.0245 7.71513 16.7443 7.34136 16.4062 7.0046C16.071 6.67062 15.598 6.2968 15.0241 5.8418L14.2475 6.82128ZM15.0241 11.1582C15.598 10.7032 16.071 10.3294 16.4062 9.99541C16.7443 9.65865 17.0245 9.28487 17.1006 8.80723L15.8662 8.61055C15.8521 8.69904 15.7944 8.84057 15.5241 9.10982C15.251 9.38186 14.8453 9.70476 14.2475 10.1787L15.0241 11.1582ZM15.8662 8.38945C15.8721 8.4264 15.875 8.46329 15.875 8.5L17.125 8.5C17.125 8.39718 17.1169 8.29453 17.1006 8.19277L15.8662 8.38945ZM15.875 8.5C15.875 8.53672 15.8721 8.5736 15.8662 8.61055L17.1006 8.80723C17.1169 8.70547 17.125 8.60282 17.125 8.5L15.875 8.5ZM15.6667 9.125L16.5 9.125L16.5 7.875L15.6667 7.875L15.6667 9.125Z"
                    fill="currentColor"
                  />
                </svg>
              </ListItemPrefix>
              <span
                className={`${menuOpen == "logout" ? "text-[#4A58EC]" : ""}`}
              >
                Log Out
              </span>
            </ListItem>
          </Link>
        </MenuItem>
      </MenuList>
    </Menu>
  );
}

export function Navbar() {
  const [isNavOpen, setIsNavOpen] = React.useState(false);

  const toggleIsNavOpen = () => setIsNavOpen((cur) => !cur);

  React.useEffect(() => {
    window.addEventListener(
      "resize",
      () => window.innerWidth >= 960 && setIsNavOpen(false)
    );
  }, []);

  return (
    <div className="w-full p-2  lg:pl-6">
      <div className="relative mx-auto flex items-center text-blue-gray-900">
        <div>
          <div className="relative ">
            <input
              className="lg:w-[400px] w-full mx-auto h-[40px] bg-[#FFF] border border-[#DFE2E6] rounded-lg text-[14px] px-9"
              type="text"
              placeholder="Search"
            />
            <span className="absolute left-4 -top-0.5 mt-[15px] ">
              <FaSistrix size={16} />
            </span>
          </div>
        </div>

        <IconButton
          size="sm"
          color="blue-gray"
          variant="text"
          onClick={toggleIsNavOpen}
          className="ml-auto mr-2 lg:hidden"
        >
          <Bars2Icon className="h-6 w-6" />
        </IconButton>
        <ProfileMenu />
      </div>
     
    </div>
  );
}
